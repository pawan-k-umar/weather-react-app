{"version":3,"sources":["components/Sidebar.js","App.js","index.js"],"names":["Sidebar","props","id","className","name1","props1","name2","props2","unit","name3","props3","name4","name5","props4","name6","props5","App","useState","name","setName","cityName","setCityName","err","setErr","data","setData","getPosition","position","fetch","coords","latitude","longitude","then","response","json","console","log","result","catch","message","onLoad","navigator","geolocation","getCurrentPosition","type","placeholder","onChange","val","target","value","onClick","current","last_updated","humidity","wind_kph","forecast","forecastday","astro","sunrise","location","country","region","Math","floor","temp_c","src","condition","icon","text","localtime","day","mintemp_c","maxtemp_c","sunset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.180d8567.chunk.js","sourcesContent":["import react from 'react';\r\n\r\nconst Sidebar = (props)=>{\r\n    return (\r\n        <>\r\n        <div id=\"left\" className='container col-sm-10 mt-5'>\r\n          <p>{props.name1}{props.props1}</p>\r\n          <p>{props.name2}{props.props2}{props.unit}</p>\r\n          <p>{props.name3}{props.props3}{props.unit}{props.name4}</p>\r\n          <p>{props.name5}{props.props4}{props.name6}{props.props5}</p>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import './App.css';\nimport React, {useState} from 'react';\nimport Sidebar from './components/Sidebar';\n\nfunction App() {\n\n  \n\n    const [details, setDetails] = useState();\n\n   \n\n\n    const [name, setName] = useState('');\n    // const [tem, setTemp] = useState('0');\n    // const [condi, setcondi] = useState('');\n    // const [iconUrl, setIconUrl] = useState();\n    const [cityName, setCityName] = useState('london');\n    // const [humidity, sethumidity] = useState();\n    // const [speed, setSpeed] = useState();\n    // const [minTemp, setMinTemp] = useState();\n    // const [maxTemp, setMaxTemp] = useState();\n    // const [sunset, setSunset] = useState();\n    // const [sunrise, setSunrise] = useState();\n    const [err, setErr] = useState();\n    // const[lastUpdated,setLatUpdated] = useState();\n    // const[time,setTime] = useState();\n    // const [countryName, setcountryName]=useState();\n    // const [region, setRegion]=useState();\n\n    const [data, setData] = useState();\n    \n    // const APIKEY = '5d3e1ba6775c5a97031d5f4705beeaad';\n    const APIKEY = '32fc58c655934bc59ac60022210205';\n    // const url = 'https://api.openweathermap.org/data/2.5/weather?q='+cityName+'&units=metric&APPID='+APIKEY+'';\n    const url = 'https://api.weatherapi.com/v1/forecast.json?key='+APIKEY+'&q='+cityName+'&days=1&aqi=no&alerts=no';\n    fetch(url)\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log(result);\n        // sethumidity(data.current.humidity)\n        // setTemp(data.current.temp_c)\n        // setSpeed(data.current.wind_kph)\n        // setcondi(data.current.condition.text)\n        // setIconUrl(data.current.condition.icon)\n        // setLatUpdated(data.current.last_updated)\n        // setSunrise(data.forecast.forecastday[0].astro.sunrise)\n        // setSunset(data.forecast.forecastday[0].astro.sunset)\n        // setMinTemp(data.forecast.forecastday[0].day.mintemp_c)\n        // setMaxTemp(data.forecast.forecastday[0].day.maxtemp_c)\n        // setTime(data.location.localtime)\n        // setcountryName(data.location.country)\n        // setRegion(data.location.region)\n        setData(result)\n        \n      })\n      .catch(err => {\n        setErr(err.message);\n     });\n\n    function getData(val){\n      setName(val.target.value);\n    }\n    function onSubmit(){\n      setCityName(name);\n    }\n\n    \n    \n    function getLocation(){\n      if(navigator.geolocation){\n          navigator.geolocation.getCurrentPosition(getPosition)\n      }\n    }\n\n    function getPosition(position){\n      // const locAPI = 'https://api.opencagedata.com/geocode/v1/json?q='+position.coords.latitude+'+'+position.coords.longitude+'&key=4096b400c4e4494681540cf736b4b4a1';\n     \n      fetch('https://maps.googleapis.com/maps/api/geocode/json?latlng='+position.coords.latitude+','+position.coords.longitude+'&key=AIzaSyDNd1taZqXE69LE2eS0zn222ccg3uIjl48')\n      .then((response)=>{return response.json()})\n      .then((data)=>{\n          console.log(data);\n          // show.innerHTML=data.results[0].components.state_district;\n      })\n    }\n\n       \n\n  return (\n    <>\n        <div className=\"App container\" onLoad={getLocation}>\n          <h1 className='logo text-danger'>Weather App</h1>\n          <div>\n            <input className='text-danger' id=\"inputId\" type='text' placeholder='Enter your city' onChange={getData}/>\n            <button onClick={onSubmit} id=\"searchbtn\">search</button>\n            <p className=\"err text-danger\">{err}</p>\n          </div>\n            <div id=\"main\">\n            <div id=\"left\">\n            {data&& \n                <Sidebar \n                    name1={['Last Updated : ']}\n                    props1={data.current.last_updated} \n                    name2={['Humidity : ']} \n                    props2={data.current.humidity}\n                    name3={['Speed : ']}\n                    props3={data.current.wind_kph}\n                    name4={[' km/h']}\n                    name5={['Sunrise : ']}\n                    props4 = {data.forecast.forecastday[0].astro.sunrise}\n                  />\n              }\n            </div>\n            {data&&\n                <div id=\"details\" className='container bg-light col-12 mt-5'>\n                  <h2 id=\"cityName\">{cityName}</h2>\n                  <h4>{data.location.country}</h4>\n                  <p className=\"text-muted\">{data.location.region}</p>\n                  <h1 id=\"temp\">{Math.floor(data.current.temp_c)} &#176;C</h1>\n                  <img id ='icon' src={data.current.condition.icon}/>\n                  <p>{data.current.condition.text}</p>\n                </div>\n            }\n\n            <div id=\"right\">\n            {data&&\n                <Sidebar \n                  name1={['Time : ']}\n                  // props1={new Date().toLocaleTimeString()} \n                  props1={data.location.localtime} \n                  name2={['Min : ']}\n                  props2={Math.floor(data.forecast.forecastday[0].day.mintemp_c)}\n                  unit={' \\u00b0C'}\n                  name3={['Max : ']}\n                  props3={Math.floor(data.forecast.forecastday[0].day.maxtemp_c)}\n                  name6={['Sunset : ']}\n                  props5 = {data.forecast.forecastday[0].astro.sunset}\n                />\n            }\n          </div>\n          </div>\n      </div>\n      <div className='footer container p-3 bg-dark text-light'>\n            <p className=\"text-center\">copyrights<span>&#169;</span>2021  <span>created by Pawan Kumar</span></p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}